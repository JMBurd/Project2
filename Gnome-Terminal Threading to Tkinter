
import tkinter as tk
import sys
import subprocess
import threading
from Bio import SeqIO
from Bio import Entrez
from Bio.Sequencing.Applications import BwaIndexCommandline
import os
import time
# --- classes ---

class Redirect():

    def __init__(self, widget, autoscroll=True):
        self.widget = widget
        self.autoscroll = autoscroll

    def write(self, text):
        self.widget.insert('end', text)
        if self.autoscroll:
            self.widget.see("end")  # autoscroll
        

# --- functions ---

def run_Main():
    t_Main = ""
    t_Main = threading.Thread(target=BWA_GUI, daemon=False, name=t_Main).start()

def bwa_thread():
    t_bwa1 = ""
    
    t_bwa1 = threading.Thread(target=BWA_run, daemon=True, name=t_bwa1).start()
    t_bwa1.join()
def out_pnt(X):
    while True:
        out_txt = X.stdout.readline()
        if out_txt == '':
            print("Command Complete")
            break
        if out_txt:
            print(out_txt.strip())

def out_Capture(inp_String, t_Delay):
    X = subprocess.Popen(inp_String, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, bufsize=1, text=True, shell=True)  
    
    while X.poll():
        out_pnt(X)
        time.sleep(t_Delay)
    else:
        out_pnt(X)
        
# ------- example function ------
def BWA_run():
    print("Thread: start")
    out_Capture('ls', 0.00)
    l_Input = 'bwa index reference.fasta'
    out_Capture(l_Input, 0.00)
       
    l_Input = 'bwa mem -t 1 reference.fasta SRR2093871_1.fastq.gz |samtools sort -o sorted.bam'
    out_Capture(l_Input, 10)

 

    #p = subprocess.Popen('bwa mem -t 8 reference.fasta SRR2093871_1.fastq.gz |samtools sort -o output.bam', stdout=subprocess.PIPE, bufsize=1, text=True, shell=True)
    print("Thread: end")

# --- Example UI ---

def BWA_GUI():
    root2 = tk.Tk()

# - Frame with Text and Scrollbar -

    frame = tk.Frame(root2)
    frame.pack(expand=True, fill='both')

    text = tk.Text(frame)
    text.pack(side='left', fill='both', expand=True)

    scrollbar = tk.Scrollbar(frame)
    scrollbar.pack(side='right', fill='y')

    text['yscrollcommand'] = scrollbar.set
    scrollbar['command'] = text.yview

    old_stdout = sys.stdout    
    sys.stdout = Redirect(text)

# - rest -

    button = tk.Button(root2, text='TEST', command=bwa_thread)
    button.pack()

    root2.mainloop()
    sys.stdout = old_stdout
    


run_Main()
